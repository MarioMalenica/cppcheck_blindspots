src/cppcheck_test.c: (in function file_crash)
src/cppcheck_test.c:40:20: Function fgets expects arg 2 to be int gets
    arbitrary unsigned integral type: sizeof((text)) - 1
  To allow arbitrary integral types to match any integral type, use
  +matchanyintegral.
src/cppcheck_test.c:40:2: Called procedure fgets may access global errno
  A checked global variable is used in the function, but not listed in its
  globals clause. By default, only globals specified in .lcl files are checked.
  To check all globals, use +allglobals. To check globals selectively use
  /*@checked@*/ in the global declaration. (Use -globs to inhibit warning)
src/cppcheck_test.c:40:32: Possibly null storage fp passed as non-null param:
                              fgets (..., fp)
  A possibly null pointer is passed as a parameter corresponding to a formal
  parameter with no /*@null@*/ annotation.  If NULL may be used for this
  parameter, add a /*@null@*/ annotation to the function parameter declaration.
  (Use -nullpass to inhibit warning)
   src/cppcheck_test.c:36:7: Storage fp may become null
src/cppcheck_test.c:40:2: Return value (type char *) ignored:
                             fgets(text, size...
  Result returned by function call is not used. If this is intended, can cast
  result to (void) to eliminate message. (Use -retvalother to inhibit warning)
src/cppcheck_test.c:44:2: Called procedure fclose may access global errno
src/cppcheck_test.c:44:2: Return value (type int) ignored: fclose(fp)
  Result returned by function call is not used. If this is intended, can cast
  result to (void) to eliminate message. (Use -retvalint to inhibit warning)
src/cppcheck_test.c: (in function readdir_crash)
src/cppcheck_test.c:70:8: Called procedure opendir may access global errno
src/cppcheck_test.c:76:11: Called procedure readdir may access global errno
src/cppcheck_test.c:76:19: Possibly null storage dir passed as non-null param:
                              readdir (dir)
   src/cppcheck_test.c:70:8: Storage dir may become null
src/cppcheck_test.c:80:29: Arrow access from possibly null pointer entry:
                              entry->d_name
  A possibly null pointer is dereferenced.  Value is either the result of a
  function which may return null (in which case, code should check it is not
  null), or a global, parameter or structure field declared with the null
  qualifier. (Use -nullderef to inhibit warning)
   src/cppcheck_test.c:76:11: Storage entry may become null
src/cppcheck_test.c:84:2: Called procedure closedir may access global errno
src/cppcheck_test.c:84:2: Return value (type int) ignored: closedir(dir)
src/cppcheck_test.c:94:30: Initializer block for test_arr has 3 elements, but
 declared as char * [4]: "abc", "def", "ghi"                             
 		"jkl"
  Initializer does not define all elements of a declared array. (Use
  -initallelements to inhibit warning)
src/cppcheck_test.c:95:3: Read-only string literal storage used as initial
                             value for unqualified storage: test_arr[0] = "abc"
  A read-only string literal is assigned to a non-observer reference. (Use
  -readonlytrans to inhibit warning)
src/cppcheck_test.c:96:3: Read-only string literal storage used as initial
                             value for unqualified storage: test_arr[1] = "def"
src/cppcheck_test.c:97:3: Read-only string literal storage used as initial
    value for unqualified storage: test_arr[2] = "ghi"                         
       
    		"jkl"
src/cppcheck_test.c: (in function parsing_err)
src/cppcheck_test.c:114:2: Undocumented use of global errno
src/cppcheck_test.c:117:50: Undocumented use of global errno
src/cppcheck_test.c:119:2: Undocumented use of global errno
src/cppcheck_test.c:120:13: Possibly null storage ptr passed as non-null param:
                               atoi (strchr(ptr, '1'))
   src/cppcheck_test.c:120:13: Storage ptr may become null
src/cppcheck_test.c:121:50: Undocumented use of global errno
src/cppcheck_test.c: (in function string_search)
src/cppcheck_test.c:134:15: Possibly null storage ptr passed as non-null param:
                               strlen (ptr)
   src/cppcheck_test.c:132:8: Storage ptr may become null
src/cppcheck_test.c: (in function out_of_bounds_access)
src/cppcheck_test.c:143:6: Operand of ! is non-boolean (char *): !str
  The operand of ! operator is a pointer. (Use +ptrnegate to inhibit warning)
src/cppcheck_test.c: (in function buffer_overflow_and_stack_corruption)
src/cppcheck_test.c:173:5: Operands of > have incompatible types (size_t, int):
                              size > (6)
src/cppcheck_test.c:174:3: Assignment of int to size_t: size = (6)
src/cppcheck_test.c:181:3: Return value (type int) ignored: printf("%d ", fo...
src/cppcheck_test.c:183:2: Return value (type int) ignored: printf("\n")
src/cppcheck_test.c: (in function main)
src/cppcheck_test.c:189:39: Function buffer_overflow_and_stack_corruption
                               expects arg 1 to be size_t gets int: 8
src/cppcheck_test.c:190:2: Return value (type int) ignored: printf("some_val...

